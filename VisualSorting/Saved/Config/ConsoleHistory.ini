[ConsoleHistoryPython]
History=print(volumr)
History=print(volume)
History="import unreal\r\n\r\ndef get_cube_actors():\r\n    # Get all actors of the class \'BP_CubeActor\'\r\n    cube_class = unreal.EditorAssetLibrary.load_blueprint_class(\'/Game/Blueprints/BP_CubeActor\')\r\n    all_cubes = unreal.EditorLevelLibrary.get_all_level_actors()\r\n    cube_actors = [actor for actor in all_cubes if isinstance(actor, cube_class)]\r\n    return cube_actors\r\n\r\ndef get_area(cube):\r\n    # Assuming your \'BP_CubeActor\' has a \'Area\' variable you want to sort by\r\n    area_value = unreal.EditorUtilityLibrary.get_actor_property_value(cube, \'Area\')\r\n    return area_value\r\n\r\ndef bubble_sort_cubes(cubes):\r\n    # Sort cubes using the Bubble Sort algorithm based on their \'Area\' property\r\n    n = len(cubes)\r\n    for i in range(n):\r\n        for j in range(0, n-i-1):\r\n            area1 = get_area(cubes[j])\r\n            area2 = get_area(cubes[j+1])\r\n            \r\n            if area1 > area2:\r\n                # Swap cubes[j] and cubes[j+1] in the editor\r\n                loc1 = cubes[j].get_actor_location()\r\n                loc2 = cubes[j+1].get_actor_location()\r\n                \r\n                cubes[j].set_actor_location(loc2)\r\n                cubes[j+1].set_actor_location(loc1)\r\n\r\ndef main():\r\n    # Get all cube actors in the level\r\n    cubes = get_cube_actors()\r\n    \r\n    if not cubes:\r\n        print(\"No cubes found in the level.\")\r\n        return\r\n    \r\n    # Perform Bubble Sort\r\n    bubble_sort_cubes(cubes)\r\n    print(\"Cubes sorted based on Area.\")\r\n\r\n# Execute the script\r\nmain()"
History="import unreal\r\n\r\ndef get_cube_actors():\r\n    # Get all actors of the class \'BP_CubeActor\'\r\n    cube_class = unreal.EditorAssetLibrary.load_blueprint_class(\'/Game/Blueprints/BP_CubeActor\')\r\n    all_cubes = unreal.EditorLevelLibrary.get_all_level_actors()\r\n    cube_actors = [actor for actor in all_cubes if isinstance(actor, cube_class)]\r\n    return cube_actors\r\n\r\ndef get_area(cube):\r\n    # Assuming your \'BP_CubeActor\' has a \'Area\' variable you want to sort by\r\n    area_value = unreal.EditorUtilityLibrary.get_actor_property_value(cube, \'Area\')\r\n    return area_value\r\n\r\ndef bubble_sort_cubes(cubes):\r\n    # Sort cubes using the Bubble Sort algorithm based on their \'Area\' property\r\n    n = len(cubes)\r\n    for i in range(n):\r\n        for j in range(0, n-i-1):\r\n            area1 = get_area(cubes[j])\r\n            area2 = get_area(cubes[j+1])\r\n            \r\n            if area1 > area2:\r\n                # Swap cubes[j] and cubes[j+1] in the editor\r\n                loc1 = cubes[j].get_actor_location()\r\n                loc2 = cubes[j+1].get_actor_location()\r\n                \r\n                cubes[j].set_actor_location(loc2)\r\n                cubes[j+1].set_actor_location(loc1)\r\n\r\ndef main():\r\n    # Get all cube actors in the level\r\n    cubes = get_cube_actors()\r\n    \r\n    if not cubes:\r\n        print(\"No cubes found in the level.\")\r\n        return\r\n    \r\n    # Perform Bubble Sort\r\n    bubble_sort_cubes(cubes)\r\n    print(\"Cubes sorted based on Area.\")\r\n\r\n# Execute the script\r\nmain()\r\n"

[ConsoleHistoryPythonREPL]
History="import unreal\r\n\r\ndef get_cube_actors():\r\n    # Get all actors of the class \'BP_CubeActor\'\r\n    cube_class = unreal.EditorAssetLibrary.load_blueprint_class(\'/Game/Blueprints/BP_CubeActor\')\r\n    all_cubes = unreal.EditorLevelLibrary.get_all_level_actors()\r\n    cube_actors = [actor for actor in all_cubes if isinstance(actor, cube_class)]\r\n    return cube_actors\r\n\r\ndef get_area(cube):\r\n    # Assuming your \'BP_CubeActor\' has a \'Area\' variable you want to sort by\r\n    area_value = unreal.EditorUtilityLibrary.get_actor_property_value(cube, \'Area\')\r\n    return area_value\r\n\r\ndef bubble_sort_cubes(cubes):\r\n    # Sort cubes using the Bubble Sort algorithm based on their \'Area\' property\r\n    n = len(cubes)\r\n    for i in range(n):\r\n        for j in range(0, n-i-1):\r\n            area1 = get_area(cubes[j])\r\n            area2 = get_area(cubes[j+1])\r\n            \r\n            if area1 > area2:\r\n                # Swap cubes[j] and cubes[j+1] in the editor\r\n                loc1 = cubes[j].get_actor_location()\r\n                loc2 = cubes[j+1].get_actor_location()\r\n                \r\n                cubes[j].set_actor_location(loc2)\r\n                cubes[j+1].set_actor_location(loc1)\r\n\r\ndef main():\r\n    # Get all cube actors in the level\r\n    cubes = get_cube_actors()\r\n    \r\n    if not cubes:\r\n        print(\"No cubes found in the level.\")\r\n        return\r\n    \r\n    # Perform Bubble Sort\r\n    bubble_sort_cubes(cubes)\r\n    print(\"Cubes sorted based on Area.\")\r\n\r\n# Execute the script\r\nmain()\r\n"

